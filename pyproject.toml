[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "meeting-notes-handler"
dynamic = ["version"]
description = "A Python CLI tool for fetching and organizing Google Meet meeting notes"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "matburt", email = "mat@matburt.net"}
]
maintainers = [
    {name = "matburt", email = "mat@matburt.net"}
]
keywords = ["google-meet", "calendar", "meeting-notes", "productivity", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Text Processing :: Markup :: Markdown",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.12"
dependencies = [
    "google-api-python-client>=2.100.0",
    "google-auth>=2.23.0",
    "google-auth-oauthlib>=1.1.0",
    "click>=8.1.0",
    "python-dateutil>=2.8.0",
    "markdownify>=0.11.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "tiktoken>=0.5.0",
    "jinja2>=3.1.0",
    "pydantic>=2.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.12",
    "flake8>=6.0",
    "mypy>=1.0"
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10"
]

[project.urls]
Homepage = "https://github.com/matburt/meeting-notes-handler"
Documentation = "https://github.com/matburt/meeting-notes-handler#readme"
Repository = "https://github.com/matburt/meeting-notes-handler"
"Bug Tracker" = "https://github.com/matburt/meeting-notes-handler/issues"

[project.scripts]
meeting-notes = "meeting_notes_handler.main:cli"
mns = "meeting_notes_handler.main:cli"

[tool.setuptools.dynamic]
version = {attr = "meeting_notes_handler.__version__"}

[tool.setuptools.packages.find]
exclude = ["tests*"]

[tool.setuptools.package-data]
meeting_notes_handler = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]